{"ast":null,"code":"var _jsxFileName = \"/home/alexey/test-app-shou-dao/pages/components/ResourceList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react'; // GraphQL query to retrieve products by IDs.\n// The price field belongs to the variants object because\n// variations of a product can have different prices.\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const app = this.context;\n    return (// GraphQL query to retrieve products and their prices\n      __jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, ({\n        data,\n        loading,\n        error\n      }) => {\n        if (loading) return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 41\n          }\n        }, \"Loading\\u2026\");\n        if (error) return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 39\n          }\n        }, error.message);\n        return __jsx(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        }, __jsx(ResourceList // Defines your resource list component\n        , {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: item => {\n            const media = __jsx(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : '',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }\n            });\n\n            const price = item.variants.edges[0].node.price;\n            return __jsx(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: `View details for ${item.title}`,\n              onClick: () => {\n                store.set('item', item);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }\n            }, __jsx(Stack, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }\n            }, __jsx(Stack.Item, {\n              fill: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 49\n              }\n            }, __jsx(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 53\n              }\n            }, __jsx(TextStyle, {\n              variation: \"strong\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 57\n              }\n            }, item.title))), __jsx(Stack.Item, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 49\n              }\n            }, __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 53\n              }\n            }, \"$\", price))));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }\n        }));\n      })\n    );\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/alexey/test-app-shou-dao/pages/components/ResourceList.js"],"names":["React","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","Component","render","app","context","ids","get","data","loading","error","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","set"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n// GraphQL query to retrieve products by IDs.\n// The price field belongs to the variants object because\n// variations of a product can have different prices.\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n\n        return (\n            // GraphQL query to retrieve products and their prices\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loadingâ€¦</div>;\n                    if (error) return <div>{error.message}</div>;\n\n                    return (\n                        <Card>\n                            <ResourceList // Defines your resource list component\n                                showHeader\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\n                                items={data.nodes}\n                                renderItem={item => {\n                                    const media = (\n                                        <Thumbnail\n                                            source={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.originalSrc\n                                                    : ''\n                                            }\n                                            alt={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.altText\n                                                    : ''\n                                            }\n                                        />\n                                    );\n                                    const price = item.variants.edges[0].node.price;\n                                    return (\n                                        <ResourceList.Item\n                                            id={item.id}\n                                            media={media}\n                                            accessibilityLabel={`View details for ${item.title}`}\n                                            onClick={() => {\n                                                store.set('item', item);\n                                            }}\n                                        >\n                                            <Stack>\n                                                <Stack.Item fill>\n                                                    <h3>\n                                                        <TextStyle variation=\"strong\">\n                                                            {item.title}\n                                                        </TextStyle>\n                                                    </h3>\n                                                </Stack.Item>\n                                                <Stack.Item>\n                                                    <p>${price}</p>\n                                                </Stack.Item>\n                                            </Stack>\n                                        </ResourceList.Item>\n                                    );\n                                }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}