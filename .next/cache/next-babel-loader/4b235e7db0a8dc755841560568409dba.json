{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/alexey/test-app-shou-dao/pages/components/ResourceList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport ApplyRandomPrices from './ApplyRandomPrices'; // GraphQL query that retrieves products by ID\n\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  // A constructor that defines selected items and nodes\n  function ResourceListWithProducts(props) {\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedItems: [],\n      selectedNodes: {}\n    };\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var app = this.context; // Returns products by ID\n\n      return __jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error,\n            refetch = _ref.refetch;\n        // Refetches products by ID\n        if (loading) return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }\n        }, \"Loading\\u2026\");\n        if (error) return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 39\n          }\n        }, error.message);\n        var nodesById = {};\n        data.nodes.forEach(function (node) {\n          return nodesById[node.id] = node;\n        });\n        return __jsx(React.Fragment, null, __jsx(Card, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }\n        }, __jsx(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          selectable: true,\n          selectedItems: _this2.state.selectedItems,\n          onSelectionChange: function onSelectionChange(selectedItems) {\n            var selectedNodes = {};\n            selectedItems.forEach(function (item) {\n              return selectedNodes[item] = nodesById[item];\n            });\n            return _this2.setState({\n              selectedItems: selectedItems,\n              selectedNodes: selectedNodes\n            });\n          },\n          renderItem: function renderItem(item) {\n            var media = __jsx(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : '',\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }\n            });\n\n            var price = item.variants.edges[0].node.price;\n            return __jsx(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title),\n              verticalAlignment: \"center\",\n              onClick: function onClick() {\n                var index = _this2.state.selectedItems.indexOf(item.id);\n\n                var node = nodesById[item.id];\n\n                if (index === -1) {\n                  _this2.state.selectedItems.push(item.id);\n\n                  _this2.state.selectedNodes[item.id] = node;\n                } else {\n                  _this2.state.selectedItems.splice(index, 1);\n\n                  delete _this2.state.selectedNodes[item.id];\n                }\n\n                _this2.setState({\n                  selectedItems: _this2.state.selectedItems,\n                  selectedNodes: _this2.state.selectedNodes\n                });\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 45\n              }\n            }, __jsx(Stack, {\n              alignment: \"center\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 49\n              }\n            }, __jsx(Stack.Item, {\n              fill: true,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 53\n              }\n            }, __jsx(\"h3\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 57\n              }\n            }, __jsx(TextStyle, {\n              variation: \"strong\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 61\n              }\n            }, item.title))), __jsx(Stack.Item, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 53\n              }\n            }, __jsx(\"p\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 57\n              }\n            }, \"$\", price))));\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }\n        })), __jsx(ApplyRandomPrices, {\n          selectedItems: _this2.state.selectedNodes,\n          onUpdate: refetch,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }\n        }));\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/alexey/test-app-shou-dao/pages/components/ResourceList.js"],"names":["React","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","ApplyRandomPrices","GET_PRODUCTS_BY_ID","ResourceListWithProducts","props","state","selectedItems","selectedNodes","app","context","ids","get","data","loading","error","refetch","message","nodesById","nodes","forEach","node","id","singular","plural","item","setState","media","images","edges","originalSrc","altText","price","variants","title","index","indexOf","push","splice","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport ApplyRandomPrices from './ApplyRandomPrices';\n\n// GraphQL query that retrieves products by ID\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n\n    // A constructor that defines selected items and nodes\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            selectedNodes: {},\n        };\n    }\n\n    render() {\n        const app = this.context;\n\n        // Returns products by ID\n        return (\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error, refetch }) => { // Refetches products by ID\n                    if (loading) return <div>Loading…</div>;\n                    if (error) return <div>{error.message}</div>;\n\n                    const nodesById = {};\n                    data.nodes.forEach(node => nodesById[node.id] = node);\n\n                    return (\n                        <>\n                            <Card>\n                                <ResourceList\n                                    showHeader\n                                    resourceName={{ singular: 'Product', plural: 'Products' }}\n                                    items={data.nodes}\n                                    selectable\n                                    selectedItems={this.state.selectedItems}\n                                    onSelectionChange={selectedItems => {\n                                        const selectedNodes = {};\n                                        selectedItems.forEach(item => selectedNodes[item] = nodesById[item]);\n\n                                        return this.setState({\n                                            selectedItems: selectedItems,\n                                            selectedNodes: selectedNodes,\n                                        });\n                                    }}\n                                    renderItem={item => {\n                                        const media = (\n                                            <Thumbnail\n                                                source={\n                                                    item.images.edges[0]\n                                                        ? item.images.edges[0].node.originalSrc\n                                                        : ''\n                                                }\n                                                alt={\n                                                    item.images.edges[0]\n                                                        ? item.images.edges[0].node.altText\n                                                        : ''\n                                                }\n                                            />\n                                        );\n                                        const price = item.variants.edges[0].node.price;\n                                        return (\n                                            <ResourceList.Item\n                                                id={item.id}\n                                                media={media}\n                                                accessibilityLabel={`View details for ${item.title}`}\n                                                verticalAlignment=\"center\"\n                                                onClick={() => {\n                                                    let index = this.state.selectedItems.indexOf(item.id);\n                                                    const node = nodesById[item.id];\n                                                    if (index === -1) {\n                                                        this.state.selectedItems.push(item.id);\n                                                        this.state.selectedNodes[item.id] = node;\n                                                    } else {\n                                                        this.state.selectedItems.splice(index, 1);\n                                                        delete this.state.selectedNodes[item.id];\n                                                    }\n\n                                                    this.setState({\n                                                        selectedItems: this.state.selectedItems,\n                                                        selectedNodes: this.state.selectedNodes,\n                                                    });\n                                                }}\n                                            >\n                                                <Stack alignment=\"center\">\n                                                    <Stack.Item fill>\n                                                        <h3>\n                                                            <TextStyle variation=\"strong\">\n                                                                {item.title}\n                                                            </TextStyle>\n                                                        </h3>\n                                                    </Stack.Item>\n                                                    <Stack.Item>\n                                                        <p>${price}</p>\n                                                    </Stack.Item>\n                                                </Stack>\n                                            </ResourceList.Item>\n                                        );\n                                    }}\n                                />\n                            </Card>\n\n                            <ApplyRandomPrices selectedItems={this.state.selectedNodes} onUpdate={refetch} />\n                        </>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}