{"ast":null,"code":"var _jsxFileName = \"/home/alexey/test-app-shou-dao/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { Page, Layout, EmptyState, Button, Card } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from './components/ResourceList';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg'; // const productImageAdminAPI = `https://05ce07551a14094626d7611a5aa64254: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@shopyfyliquid.myshopify.com/admin/api/2021-07/script_tags.json`;\n\nconst productImageAdminAPI = `https://shopyfyliquid.myshopify.com/admin/api/2021-07/script_tags.json`;\nlet promise = fetch(productImageAdminAPI, {\n  method: 'post',\n  body: {\n    \"script_tag\": {\n      \"event\": \"onload\",\n      \"src\": \"https://unpkg.com/vue@next\"\n    }\n  }\n}).then(res => res.json());\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      store.set('ids', idsFromResources);\n    });\n  }\n\n  render() {\n    // A constant that defines your app's empty state\n    const emptyState = !store.get('ids');\n    return __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(TitleBar, {\n      primaryAction: {\n        content: 'Select products',\n        onAction: () => this.setState({\n          open: true\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), emptyState ? // Controls the layout of your app's empty state\n    __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, document.querySelector('#tag_script').innerHTML = promise, __jsx(\"p\", {\n      id: \"tag_script\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"test \"), __jsx(EmptyState, {\n      heading: \"Discount your products temporarily\",\n      action: {\n        content: 'Select products',\n        onAction: () => this.setState({\n          open: true\n        })\n      },\n      image: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Select products to change their price temporarily.\"))) : // Uses the new resource list that retrieves products by IDs\n    __jsx(ResourceListWithProducts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/home/alexey/test-app-shou-dao/pages/index.js"],"names":["React","gql","Mutation","Page","Layout","EmptyState","Button","Card","ResourcePicker","TitleBar","store","ResourceListWithProducts","img","productImageAdminAPI","promise","fetch","method","body","then","res","json","Index","Component","open","resources","idsFromResources","selection","map","product","id","setState","set","render","emptyState","get","content","onAction","state","handleSelection","document","querySelector","innerHTML"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { Page, Layout, EmptyState, Button, Card } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from './components/ResourceList';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\n\n\n// const productImageAdminAPI = `https://05ce07551a14094626d7611a5aa64254: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@shopyfyliquid.myshopify.com/admin/api/2021-07/script_tags.json`;\nconst productImageAdminAPI = `https://shopyfyliquid.myshopify.com/admin/api/2021-07/script_tags.json`;\nlet promise = fetch(productImageAdminAPI, {\n  method: 'post',\n  body: {\n    \"script_tag\": {\n      \"event\": \"onload\",\n      \"src\": \"https://unpkg.com/vue@next\"\n    }\n  }\n}).then((res) => res.json());\n\n\n\n\nclass Index extends React.Component {\n  state = { open: false };\n  render() {\n    // A constant that defines your app's empty state\n    const emptyState = !store.get('ids');\n    return (\n      <Page>\n        <TitleBar\n          primaryAction={{\n            content: 'Select products',\n            onAction: () => this.setState({ open: true }),\n          }}\n        />\n        <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n        {emptyState ? ( // Controls the layout of your app's empty state\n          <Layout>\n\n            {document.querySelector('#tag_script').innerHTML = promise}\n\n            <p id='tag_script'>test </p>\n\n            <EmptyState\n              heading=\"Discount your products temporarily\"\n              action={{\n                content: 'Select products',\n                onAction: () => this.setState({ open: true }),\n              }}\n              image={img}\n            >\n              <p>Select products to change their price temporarily.</p>\n            </EmptyState>\n          </Layout>\n        ) : (\n          // Uses the new resource list that retrieves products by IDs\n          <ResourceListWithProducts />\n        )}\n      </Page>\n    );\n  }\n  handleSelection = (resources) => {\n    const idsFromResources = resources.selection.map((product) => product.id);\n    this.setState({ open: false });\n    store.set('ids', idsFromResources);\n  };\n}\n\nexport default Index;\n\n\n"]},"metadata":{},"sourceType":"module"}