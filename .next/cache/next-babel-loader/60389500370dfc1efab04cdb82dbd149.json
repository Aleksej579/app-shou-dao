{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/alexey/test-app-shou-dao/pages/components/ResourceList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react'; // GraphQL query to retrieve products by IDs.\n// The price field belongs to the variants object because\n// variations of a product can have different prices.\n\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var app = this.context;\n      return (// GraphQL query to retrieve products and their prices\n        __jsx(Query, {\n          query: GET_PRODUCTS_BY_ID,\n          variables: {\n            ids: store.get('ids')\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        }, function (_ref) {\n          var data = _ref.data,\n              loading = _ref.loading,\n              error = _ref.error;\n          if (loading) return __jsx(\"div\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }\n          }, \"Loading\\u2026\");\n          if (error) return __jsx(\"div\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 39\n            }\n          }, error.message);\n          return __jsx(Card, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }\n          }, __jsx(ResourceList // Defines your resource list component\n          , {\n            showHeader: true,\n            resourceName: {\n              singular: 'Product',\n              plural: 'Products'\n            },\n            items: data.nodes,\n            renderItem: function renderItem(item) {\n              var media = __jsx(Thumbnail, {\n                source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n                alt: item.images.edges[0] ? item.images.edges[0].node.altText : '',\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }\n              });\n\n              var price = item.variants.edges[0].node.price;\n              return __jsx(ResourceList.Item, {\n                id: item.id,\n                media: media,\n                accessibilityLabel: \"View details for \".concat(item.title),\n                onClick: function onClick() {\n                  store.set('item', item);\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }\n              }, __jsx(Stack, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }\n              }, __jsx(Stack.Item, {\n                fill: true,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 49\n                }\n              }, __jsx(\"h3\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 53\n                }\n              }, __jsx(TextStyle, {\n                variation: \"strong\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 57\n                }\n              }, item.title))), __jsx(Stack.Item, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 49\n                }\n              }, __jsx(\"p\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 53\n                }\n              }, \"$\", price))));\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }\n          }));\n        })\n      );\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/alexey/test-app-shou-dao/pages/components/ResourceList.js"],"names":["React","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","app","context","ids","get","data","loading","error","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","set","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n// GraphQL query to retrieve products by IDs.\n// The price field belongs to the variants object because\n// variations of a product can have different prices.\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n\n        return (\n            // GraphQL query to retrieve products and their prices\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loading…</div>;\n                    if (error) return <div>{error.message}</div>;\n\n                    return (\n                        <Card>\n                            <ResourceList // Defines your resource list component\n                                showHeader\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\n                                items={data.nodes}\n                                renderItem={item => {\n                                    const media = (\n                                        <Thumbnail\n                                            source={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.originalSrc\n                                                    : ''\n                                            }\n                                            alt={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.altText\n                                                    : ''\n                                            }\n                                        />\n                                    );\n                                    const price = item.variants.edges[0].node.price;\n                                    return (\n                                        <ResourceList.Item\n                                            id={item.id}\n                                            media={media}\n                                            accessibilityLabel={`View details for ${item.title}`}\n                                            onClick={() => {\n                                                store.set('item', item);\n                                            }}\n                                        >\n                                            <Stack>\n                                                <Stack.Item fill>\n                                                    <h3>\n                                                        <TextStyle variation=\"strong\">\n                                                            {item.title}\n                                                        </TextStyle>\n                                                    </h3>\n                                                </Stack.Item>\n                                                <Stack.Item>\n                                                    <p>${price}</p>\n                                                </Stack.Item>\n                                            </Stack>\n                                        </ResourceList.Item>\n                                    );\n                                }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}